# -*- coding: utf-8 -*-
"""steam_dataset.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13aiI77fd2mpfhIv5FiYbiaUgN4WkzS0u

## Importing Dependencies
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from scipy.stats import pearsonr
from sklearn.preprocessing import StandardScaler

"""## Reading The Data"""

data = pd.read_csv('steam_top_100.csv')

data.head()

data.shape

data.dtypes

data.info()

#checking the missing values
data.isnull().sum()

"""## notes:

*   Review summery change to diffrent system - encoding
*   Change release date to 'datetime' data type
*   One-Hot-Encoding to do the tags column

Review summary

## Encoding for Review summer
"""

#checking the unique values of Review summary
data['Review summary'].unique()

#categorize this variable
data['Review summary'] = pd.Categorical(data['Review summary'], ['Very Positive','Mostly Positive','Mixed','Overwhelmingly Positive'], ordered = True)

data['Review summary'].unique()

"""break"""

data['Review summary encoded'] = data['Review summary'].cat.codes

data['Review summary encoded'].unique()

data['Review summary'].unique()

data.at[7,'Game']

data.at[7,'Review summary']

data.at[7,'Review summary encoded']

data.head()

data.tail()

data.info()

"""replacing missing value"""

data['Review summary'].mode()

"""'Very Positive' turn out to be the mode in this variable."""

mode_value = data['Review summary'].mode()[0]

data['Review summary'].fillna(mode_value, inplace=True)

#checking the missing values
data.isnull().sum()

"""## Change data type for 'datetime'

*   Changing release date variable to datetime datatype.
*   Make new column just for release year.
"""

data.info()

data.head()

data['Release date'] = data['Release date'].replace("Nov 2018", "01 Nov 2018")
data['Release date'] = pd.to_datetime(data['Release date'], errors='coerce')

data.isnull().sum()

data.head()

data[data['Release date'].isnull()]

data.isnull().sum()

"""making a new cloumn for Release Year"""

data['Release Year'] = data['Release date'].dt.year

data.head()

"""## Total Reviews

*   Getting rid of null values in total reviews.
*   Also changing data type to int.
"""

data.info()

data = data.fillna(value={'Total reviews':data['Total reviews'].median()})

data['Total reviews'] = data['Total reviews'].astype('int')

data.isnull().sum()

name = ['Steam id','Game','Current players','Peak players today','Release date','Release Year','Review summary','Review summary encoded','Total reviews','Tags']
data = data.reindex(columns = name)

data.head()

"""## EDA

top 10 games according to Current players
"""

top = data.sort_values('Current players', ascending=False).head(10)
plt.figure(figsize=(30,10))
sns.barplot(x = top['Current players'], y = top.Game)
plt.title('Top 10 games according to current players')
plt.show()

"""top 10 games according to Peak players Today"""

top = data.sort_values('Peak players today', ascending=False). head(10)
plt.figure(figsize= (30,10))
sns.barplot(x = top['Peak players today'], y = top.Game)
plt.title('Top 10 Games According to Peak Players Today')
plt.show()

""" Oldest Release"""

display(data.sort_values('Release date', ascending=True)[0:1])

"""Newest Release"""

display(data.sort_values('Release date', ascending=False)[0:1])

"""Top 10 Highest Number of Reviews"""

top = data.sort_values('Total reviews', ascending=False).head(10)
print(top[['Game','Total reviews']])

"""Top 10 Lowest number of reviews"""

top = data.sort_values('Total reviews', ascending= True).head(10)
print(top[['Game','Total reviews']])

"""Average Current players"""

data['Current players'].describe()

plt.figure(figsize=(8,10))
sns.boxenplot(data = data['Current players'])
plt.ylabel('Number of players')
plt.xlabel('Current players')
plt.title('Current players')

"""Average number of players in a day."""

data['Peak players today'].describe()

plt.figure(figsize=(8,10))
sns.boxplot(data = data['Peak players today'])
plt.title('Peak players Today')
plt.ylabel('Number of players')
plt.xlabel('Peak players Today')

""" most common review by the player"""

rev = data['Review summary'].value_counts()
print(rev)

plt.figure(figsize=(20,10))
plt.pie(rev, labels= rev.index,autopct='%.0f%%',wedgeprops={'linewidth': 3.0, 'edgecolor': 'white'}, textprops={'size': 'x-large'})
plt.title('Proportion of review by the players')
plt.axis('equal')
plt.show()

"""which year had the most games released"""

print(data['Release Year'].unique())
year = data['Release Year'].value_counts()
print(year)

plt.figure(figsize=(20,10))
sns.barplot(x= year.index ,y = year)
plt.xticks(rotation=50)
plt.title('Number of game released each year.')
plt.xlabel('Year')
plt.ylabel('Number of games')
plt.show()